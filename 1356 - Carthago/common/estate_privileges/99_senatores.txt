#All scopes are country scope
#All parameters are optional

# estate_privilege = {
# 	is_valid = { triggers }						#Conditions for whether it is possible for the country to have this privilege (it will not display on the list if they are false, and will be revoked if it has already been granted)
# 	can_select = { triggers } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
# 	on_granted = { effects } 					#Effects executed immediately upon the privilege being taken
# 	can_revoke = { triggers } 					#Conditions for whether the country can revoke the privilege
# 	on_revoked = { effects } 					#Effects executed upon the privilege being revoked by the country
# 	on_invalid = { effects } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
# 	penalties = { modifiers } 					#Negative modifiers granted while the privilege is active (creates different tooltip to benefits)
# 	conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
# 		trigger = { triggers }
# 		modifier = { modifiers }
# 		is_bad = yes/no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
# 	}
# 	modifier_by_land_ownership = { modifiers } 	#Multiplies the modifier by the % of land owned by the estate.
# 	mechanics = { mechanics } 					#Special mechanics the privilege enables
# 	cooldown_years = int 						#Time limit before which the privilege cannot be revoked
# 	on_cooldown_expires = { effects }			#Effect executed once the specified cooldown_years timer has run down
#	ai_will_do									#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
# }


estate_senatores_land_rights = {
	icon = privilege_grant_autonomy
	land_share = 5
	max_absolutism = -5
	loyalty = 0.05
	influence = 0.05
	can_select = {
	}
	on_granted = {
	}
	penalties = {
	}
	benefits = {
		governing_capacity = 100
	}
	ai_will_do = {
		factor = 5
		modifier = {
			factor = 1.4
			num_of_territories = 5
		}
		modifier = {
			factor = 1.5
			num_of_territories = 10
		}
		modifier = {
			factor = 1.5
			num_of_territories = 15
		}
		modifier = {
			factor = 0
			OR = {
				NOT = { crown_land_share = 25 }
				estate_influence = {
					estate = estate_senatores
					influence = 75
				}
			}
			NOT = { has_estate_privilege = estate_senatores_land_rights }
		}
		modifier = {
			factor = 0
			NOT = { num_of_territories = 1 }
		}
		modifier = {
			factor = 0.8
			OR = {
				NOT = { crown_land_share = 40 }
				AND = {
					is_absolutism_active = yes
					NOT = { crown_land_share = 60 }
				}
			}
			NOT = { has_estate_privilege = estate_senatores_land_rights }
		}
		modifier = {
			factor = 0.8
			OR = {
				NOT = { crown_land_share = 30 }
				AND = {
					is_absolutism_active = yes
					NOT = { crown_land_share = 50 }
				}
			}
			NOT = { has_estate_privilege = estate_senatores_land_rights }
		}
		modifier = {
			factor = 0.8
			is_absolutism_active = yes
		}
	}
}

estate_senatores_primacy = {
	icon = privilege_admin_power
	land_share = 10
	max_absolutism = -5
	loyalty = 0.05
	influence = 0.05
	can_select = {
	}
	on_granted = {
	}
	penalties = {
		yearly_corruption = 0.15
	}
	benefits = {
		country_admin_power = 1
		country_diplomatic_power = 1
		country_military_power = 1
	}
	ai_will_do = {
		factor = 12
		modifier = {
			factor = 0
			OR = {
				NOT = { crown_land_share = 30 }
				estate_influence = {
					estate = estate_senatores
					influence = 75
				}
			}
			NOT = { has_estate_privilege = estate_senatores_primacy }
		}
		modifier = {
			factor = 0.8
			OR = {
				NOT = { crown_land_share = 35 }
				AND = {
					is_absolutism_active = yes
					NOT = { crown_land_share = 55 }
				}
			}
			NOT = { has_estate_privilege = estate_senatores_primacy }
		}
		modifier = {
			factor = 0.8
			is_absolutism_active = yes
		}
		modifier = {
			factor = 1.25
			NOT = { mil = 2 }
		}
		modifier = {
			factor = 0.8
			mil = 5
		}
	}
}

estate_senatores_right_of_counsel = {
	icon = privilege_royal_authority
	max_absolutism = -10
	loyalty = 0.1
	influence = 0.1
	penalties = {
	}
	benefits = {
	}
	ai_will_do = {
		factor = 10
		modifier = {
			factor = 0
			is_absolutism_active = yes
		}
	}
}

estate_senatores_consul_perpetuo = {
	icon = privilege_empty_throne
	max_absolutism = -10
	influence = 0.15
	loyalty = 0.15
	penalties = {
		stability_cost_modifier = 0.1
	}
	benefits = {
		all_power_cost = -0.15
	}
	ai_will_do = {
		factor = 10
		modifier = {
			factor = 0.5
			is_absolutism_active = yes
		}
		modifier = {
			factor = 1.25
			NOT = { adm = 2 }
		}
		modifier = {
			factor = 0.8
			adm = 5
		}
	}
}

estate_senatores_power_of_local_appointment = {
	icon = privilege_royal_authority
	max_absolutism = -10
	loyalty = 0.25
	influence = 0.25
	penalties = {
		global_autonomy = 0.2
		yearly_absolutism = -0.15
	}
	benefits = {
		development_cost = -0.15
		stability_cost_modifier = -0.25
	}
	ai_will_do = {
		factor = 10
		modifier = {
			factor = 0.5
			OR = {
				is_absolutism_active = yes
				average_autonomy_above_min = 25
			}
		}
		modifier = {
			factor = 1.25
			NOT = { average_autonomy_above_min = 10 }
			personality = ai_administrator
		}
		modifier = {
			factor = 0
			is_absolutism_active = yes
			average_autonomy_above_min = 50
		}
	}
}

estate_senatores_monopoly_of_incense = {
	icon = privilege_monopoly_of_goods_incence
	max_absolutism = -10
	loyalty = 0.1
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = incense
		}
	}
	can_select = {
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
			NOT = { has_disaster = french_revolution }
			NOT = {
				has_disaster_progress = {
					disaster = french_revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		add_mercantilism = 1
		add_years_of_owned_provinces_production_income = {
			years = 8
			trigger = {
				trade_goods = incense
			}
			custom_tooltip = MONOPOLY_INCOME_INCENSE_DESC
		}
		#No needs for creating new tooltips for these...
		custom_tooltip = estate_church_monopoly_of_incense_effect_tooltip
		hidden_effect = {
			every_owned_province = {
				limit = {
					trade_goods = incense
				}
				add_province_modifier = {
					name = estate_senatores_monopoly_of_incense_mod
					duration = -1
				}
			}
		}
	}
	on_revoked = {
		custom_tooltip = estate_church_monopoly_of_incense_revoke_tooltip
		hidden_effect = {
			every_owned_province = {
				limit = {
					has_province_modifier = estate_senatores_monopoly_of_incense_mod
				}
				remove_province_modifier = estate_senatores_monopoly_of_incense_mod
			}
		}
	}
	on_invalid = {
		custom_tooltip = estate_church_monopoly_of_incense_revoke_tooltip
		hidden_effect = {
			every_owned_province = {
				limit = {
					has_province_modifier = estate_senatores_monopoly_of_incense_mod
				}
				remove_province_modifier = estate_senatores_monopoly_of_incense_mod
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		country_event = { id = monopoly_privileges.8 }
	}
	ai_will_do = {
		factor = 0
	}
}

estate_senatores_monopoly_of_wine = {
	icon = privilege_monopoly_of_goods_wine
	max_absolutism = -10
	loyalty = 0.1
	is_valid = {
		has_dlc = "Emperor"
		NOT = { religion_group = muslim }
		any_owned_province = {
			trade_goods = wine
		}
	}
	can_select = {
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
			NOT = { has_disaster = french_revolution }
			NOT = {
				has_disaster_progress = {
					disaster = french_revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		add_mercantilism = 1
		add_years_of_owned_provinces_production_income = {
			years = 8
			trigger = {
				trade_goods = wine
			}
			custom_tooltip = MONOPOLY_INCOME_WINE_DESC
		}
		custom_tooltip = estate_church_monopoly_of_wine_effect_tooltip
		hidden_effect = {
			every_owned_province = {
				limit = {
					trade_goods = wine
				}
				add_province_modifier = {
					name = estate_senatores_monopoly_of_wine_mod
					duration = -1
				}
			}
		}
	}
	on_revoked = {
		custom_tooltip = estate_church_monopoly_of_wine_revoke_tooltip
		hidden_effect = {
			every_owned_province = {
				limit = {
					has_province_modifier = estate_senatores_monopoly_of_wine_mod
				}
				remove_province_modifier = estate_senatores_monopoly_of_wine_mod
			}
		}
	}
	on_invalid = {
		custom_tooltip = estate_church_monopoly_of_wine_revoke_tooltip
		hidden_effect = {
			every_owned_province = {
				limit = {
					has_province_modifier = estate_senatores_monopoly_of_wine_mod
				}
				remove_province_modifier = estate_senatores_monopoly_of_wine_mod
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		country_event = { id = monopoly_privileges.10 }
	}
	ai_will_do = {
		factor = 0
	}
}

estate_senatores_monopoly_of_metals = {
	icon = privilege_monopoly_of_goods_iron
	max_absolutism = -10
	loyalty = 0.1
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			OR = {
				trade_goods = iron
				trade_goods = copper
			}
		}
	}
	can_select = {
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
			NOT = { has_disaster = french_revolution }
			NOT = {
				has_disaster_progress = {
					disaster = french_revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		add_mercantilism = 1
		add_years_of_owned_provinces_production_income = {
			years = 8
			trigger = {
				OR = {
				trade_goods = iron
				trade_goods = copper
			}
			}
			custom_tooltip = MONOPOLY_INCOME_IRON_DESC
		}
		custom_tooltip = estate_nobles_monopoly_of_metals_effect_tooltip
		hidden_effect = {
			every_owned_province = {
				limit = {
					OR = {
				trade_goods = iron
				trade_goods = copper
			}
				}
				add_province_modifier = {
					name = estate_senatores_monopoly_of_metals_mod
					duration = -1
				}
			}
		}
	}
	on_revoked = {
		custom_tooltip = estate_nobles_monopoly_of_metals_revoke_tooltip
		hidden_effect = {
			every_owned_province = {
				limit = {
					has_province_modifier = estate_senatores_monopoly_of_metals_mod
				}
				remove_province_modifier = estate_senatores_monopoly_of_metals_mod
			}
		}
	}
	on_invalid = {
		custom_tooltip = estate_nobles_monopoly_of_metals_revoke_tooltip
		hidden_effect = {
			every_owned_province = {
				limit = {
					has_province_modifier = estate_senatores_monopoly_of_metals_mod
				}
				remove_province_modifier = estate_senatores_monopoly_of_metals_mod
			}
		}
	}
	penalties = {
	}
	benefits = {
	}

	cooldown_years = 10
	on_cooldown_expires = {
		country_event = { id = monopoly_privileges.5 }
	}
	ai_will_do = {
		factor = 0
	}
}
estate_senatores_monopoly_of_gems = {
	icon = privilege_monopoly_of_goods_gems
	max_absolutism = -10
	loyalty = 0.1
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = gems
		}
	}
	can_select = {
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
			NOT = { has_disaster = french_revolution }
			NOT = {
				has_disaster_progress = {
					disaster = french_revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		add_mercantilism = 1
		add_years_of_owned_provinces_production_income = {
			years = 8
			trigger = {
				trade_goods = gems
			}
			custom_tooltip = MONOPOLY_INCOME_GEMS_DESC
		}
		custom_tooltip = estate_nobles_monopoly_of_gems_effect_tooltip
		hidden_effect = {
			every_owned_province = {
				limit = {
					trade_goods = gems
				}
				add_province_modifier = {
					name = estate_senatores_monopoly_of_gems_mod
					duration = -1
				}
			}
		}
	}
	on_revoked = {
		custom_tooltip = estate_nobles_monopoly_of_gems_revoke_tooltip
		hidden_effect = {
			every_owned_province = {
				limit = {
					has_province_modifier = estate_senatores_monopoly_of_gems_mod
				}
				remove_province_modifier = estate_senatores_monopoly_of_gems_mod
			}
		}
	}
	on_invalid = {
		custom_tooltip = estate_nobles_monopoly_of_gems_revoke_tooltip
		hidden_effect = {
			every_owned_province = {
				limit = {
					has_province_modifier = estate_senatores_monopoly_of_gems_mod
				}
				remove_province_modifier = estate_senatores_monopoly_of_gems_mod
			}
		}
	}
	penalties = {
	}
	benefits = {
	}

	cooldown_years = 10
	on_cooldown_expires = {
		country_event = { id = monopoly_privileges.7 }
	}
	ai_will_do = {
		factor = 0
	}
}

estate_senatores_statutory_rights = {
	icon = privilege_grant_autonomy
	max_absolutism = -5
	influence = 0.1
	is_valid = {
		has_estate_privilege = estate_senatores_statutory_rights
	}
	on_granted = {
		change_estate_land_share = {
			estate = all
			share = -30
		}
	}
	penalties = {
		min_autonomy = 25
	}
	benefits = {
	}
	ai_will_do = {
		factor = 0
	}

	cooldown_years = 20
}

estate_senatores_supremacy_over_crown = {
	icon = privilege_empty_throne
	max_absolutism = -5
	influence = 0.1
	loyalty = 0.1
	is_valid = {
		has_dlc = "Emperor"
	}
	penalties = {
	}
	benefits = {
		burghers_loyalty_modifier = 0.1
		church_loyalty_modifier = 0.1
		dhimmi_loyalty_modifier = 0.1
		cossacks_loyalty_modifier = 0.1
		rajput_loyalty_modifier = 0.1
		brahmins_hindu_loyalty_modifier = 0.1
		brahmins_muslim_loyalty_modifier = 0.1
		brahmins_other_loyalty_modifier = 0.1
		maratha_loyalty_modifier = 0.1
		jains_loyalty_modifier = 0.1
		vaisyas_loyalty_modifier = 0.1
		nomadic_tribes_loyalty_modifier = 0.1
		burghers_influence_modifier = 0.1
		church_influence_modifier = 0.1
		dhimmi_influence_modifier = 0.1
		cossacks_influence_modifier = 0.1
		rajput_influence_modifier = 0.1
		brahmins_hindu_influence_modifier = 0.1
		brahmins_muslim_influence_modifier = 0.1
		brahmins_other_influence_modifier = 0.1
		maratha_influence_modifier = 0.1
		jains_influence_modifier = 0.1
		vaisyas_influence_modifier = 0.1
		nomadic_tribes_influence_modifier = 0.1
	}
	mechanics = {
		can_give_agendas_without_interaction
	}
	ai_will_do = {
		factor = 0
	}
}